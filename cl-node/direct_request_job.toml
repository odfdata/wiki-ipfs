type = "directrequest"
schemaVersion = 1
name = "Get > String[], Bytes32[]"
externalJobID = "22009141-c493-478c-ae3d-0d6b09cbc0b7"
forwardingAllowed = false
contractAddress = "0xa00C397463FC7dcf8bd4227AD920A6abcb3F216c" # oracle contract address
minContractPaymentLinkJuels = "0"
observationSource = """
    decode_log      [type="ethabidecodelog"
                     abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                     data="$(jobRun.logData)"
                     topics="$(jobRun.logTopics)"
                    ]

    decode_cbor     [type="cborparse" data="$(decode_log.data)"]
    fetch           [type="bridge"
                     name="aws-file-to-hash"
                     requestData="{\\"id\\": $(jobSpec.externalJobID), \\"data\\": {\\"CIDList\\": $(decode_cbor.cid)}}"
                     timeout="54000s"
                    ]
    parse           [type="jsonparse" path="data" data="$(fetch)"]
    encode_data     [type="ethabiencode" abi="(bytes32 requestId, string[] CIDList, bytes32[] evalHashList)" data="{ \\"requestId\\": $(decode_log.requestId), \\"CIDList\\": $(parse.CIDList), \\"evalHashList\\": $(parse.evaluatedHashList)}"]
    encode_tx       [type="ethabiencode"
                      abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                      data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
                    ]
    submit_tx    [type="ethtx" to="0xa00C397463FC7dcf8bd4227AD920A6abcb3F216c" data="$(encode_tx)"]

    decode_log -> decode_cbor -> fetch -> parse -> encode_data -> encode_tx -> submit_tx
"""
